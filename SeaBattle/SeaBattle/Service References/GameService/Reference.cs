//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SeaBattle.GameService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseRequest", Namespace="http://schemas.datacontract.org/2004/07/Common.Request", IsReference=true)]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SeaBattle.GameService.RegisterRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SeaBattle.GameService.CreateGameRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SeaBattle.GameService.ConnectToGameRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SeaBattle.GameService.SendReadyRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SeaBattle.GameService.SendMessageRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SeaBattle.GameService.AuthorizeRequest))]
    public partial class BaseRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ClientIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ClientId {
            get {
                return this.ClientIdField;
            }
            set {
                if ((this.ClientIdField.Equals(value) != true)) {
                    this.ClientIdField = value;
                    this.RaisePropertyChanged("ClientId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegisterRequest", Namespace="http://schemas.datacontract.org/2004/07/Common.Request", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class RegisterRequest : SeaBattle.GameService.BaseRequest {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateGameRequest", Namespace="http://schemas.datacontract.org/2004/07/Common.Request", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class CreateGameRequest : SeaBattle.GameService.BaseRequest {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConnectToGameRequest", Namespace="http://schemas.datacontract.org/2004/07/Common.Request", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class ConnectToGameRequest : SeaBattle.GameService.BaseRequest {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GameIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid GameId {
            get {
                return this.GameIdField;
            }
            set {
                if ((this.GameIdField.Equals(value) != true)) {
                    this.GameIdField = value;
                    this.RaisePropertyChanged("GameId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SendReadyRequest", Namespace="http://schemas.datacontract.org/2004/07/Common.Request", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class SendReadyRequest : SeaBattle.GameService.BaseRequest {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SeaBattle.GameService.Ship[] ShipsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SeaBattle.GameService.Ship[] Ships {
            get {
                return this.ShipsField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipsField, value) != true)) {
                    this.ShipsField = value;
                    this.RaisePropertyChanged("Ships");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SendMessageRequest", Namespace="http://schemas.datacontract.org/2004/07/Common.Request", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class SendMessageRequest : SeaBattle.GameService.BaseRequest {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthorizeRequest", Namespace="http://schemas.datacontract.org/2004/07/Common.Request", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class AuthorizeRequest : SeaBattle.GameService.BaseRequest {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Ship", Namespace="http://schemas.datacontract.org/2004/07/Entity.GameEntities")]
    [System.SerializableAttribute()]
    public partial class Ship : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SeaBattle.GameService.Deck[] DecksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsKilledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SeaBattle.GameService.ShipOrientation OrientationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SeaBattle.GameService.XYCoordinate StartPointField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SeaBattle.GameService.Deck[] Decks {
            get {
                return this.DecksField;
            }
            set {
                if ((object.ReferenceEquals(this.DecksField, value) != true)) {
                    this.DecksField = value;
                    this.RaisePropertyChanged("Decks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsKilled {
            get {
                return this.IsKilledField;
            }
            set {
                if ((this.IsKilledField.Equals(value) != true)) {
                    this.IsKilledField = value;
                    this.RaisePropertyChanged("IsKilled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SeaBattle.GameService.ShipOrientation Orientation {
            get {
                return this.OrientationField;
            }
            set {
                if ((this.OrientationField.Equals(value) != true)) {
                    this.OrientationField = value;
                    this.RaisePropertyChanged("Orientation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SeaBattle.GameService.XYCoordinate StartPoint {
            get {
                return this.StartPointField;
            }
            set {
                if ((object.ReferenceEquals(this.StartPointField, value) != true)) {
                    this.StartPointField = value;
                    this.RaisePropertyChanged("StartPoint");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="XYCoordinate", Namespace="http://schemas.datacontract.org/2004/07/Entity.GameEntities")]
    [System.SerializableAttribute()]
    public partial class XYCoordinate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int XField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int X {
            get {
                return this.XField;
            }
            set {
                if ((this.XField.Equals(value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Y {
            get {
                return this.YField;
            }
            set {
                if ((this.YField.Equals(value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Deck", Namespace="http://schemas.datacontract.org/2004/07/Entity.GameEntities")]
    [System.SerializableAttribute()]
    public partial class Deck : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SeaBattle.GameService.DeckStatus StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SeaBattle.GameService.DeckStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipOrientation", Namespace="http://schemas.datacontract.org/2004/07/Entity.Enums")]
    public enum ShipOrientation : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Horisontal = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Vertical = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeckStatus", Namespace="http://schemas.datacontract.org/2004/07/Entity.Enums")]
    public enum DeckStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ok = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Damaged = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseResponse", Namespace="http://schemas.datacontract.org/2004/07/Common.Respose")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SeaBattle.GameService.RegisterResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SeaBattle.GameService.ShotResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SeaBattle.GameService.GetListGamesResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SeaBattle.GameService.CurentGameResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SeaBattle.GameService.SendReadyResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SeaBattle.GameService.EndGameResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SeaBattle.GameService.AbortGameResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SeaBattle.GameService.StartChatResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SeaBattle.GameService.RecieveMessageResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SeaBattle.GameService.GetTopPlayersResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SeaBattle.GameService.GetLastGamesResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SeaBattle.GameService.CreateGameResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SeaBattle.GameService.AuthorizeResponse))]
    public partial class BaseResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ClientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ClientId {
            get {
                return this.ClientIdField;
            }
            set {
                if ((this.ClientIdField.Equals(value) != true)) {
                    this.ClientIdField = value;
                    this.RaisePropertyChanged("ClientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegisterResponse", Namespace="http://schemas.datacontract.org/2004/07/Common.Respose")]
    [System.SerializableAttribute()]
    public partial class RegisterResponse : SeaBattle.GameService.BaseResponse {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShotResponse", Namespace="http://schemas.datacontract.org/2004/07/Common.Respose")]
    [System.SerializableAttribute()]
    public partial class ShotResponse : SeaBattle.GameService.BaseResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SeaBattle.GameService.Shot CurrentShotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SeaBattle.GameService.DTOUser UserField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SeaBattle.GameService.Shot CurrentShot {
            get {
                return this.CurrentShotField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentShotField, value) != true)) {
                    this.CurrentShotField = value;
                    this.RaisePropertyChanged("CurrentShot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SeaBattle.GameService.DTOUser User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetListGamesResponse", Namespace="http://schemas.datacontract.org/2004/07/Common.Respose")]
    [System.SerializableAttribute()]
    public partial class GetListGamesResponse : SeaBattle.GameService.BaseResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SeaBattle.GameService.DTOAwaitingGame[] GamesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SeaBattle.GameService.DTOAwaitingGame[] Games {
            get {
                return this.GamesField;
            }
            set {
                if ((object.ReferenceEquals(this.GamesField, value) != true)) {
                    this.GamesField = value;
                    this.RaisePropertyChanged("Games");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CurentGameResponse", Namespace="http://schemas.datacontract.org/2004/07/Common.Respose")]
    [System.SerializableAttribute()]
    public partial class CurentGameResponse : SeaBattle.GameService.BaseResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SeaBattle.GameService.DTOUser OpponentField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SeaBattle.GameService.DTOUser Opponent {
            get {
                return this.OpponentField;
            }
            set {
                if ((object.ReferenceEquals(this.OpponentField, value) != true)) {
                    this.OpponentField = value;
                    this.RaisePropertyChanged("Opponent");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SendReadyResponse", Namespace="http://schemas.datacontract.org/2004/07/Common.Respose")]
    [System.SerializableAttribute()]
    public partial class SendReadyResponse : SeaBattle.GameService.BaseResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SeaBattle.GameService.Ship[] ConflictShipField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SeaBattle.GameService.Ship[] ConflictShip {
            get {
                return this.ConflictShipField;
            }
            set {
                if ((object.ReferenceEquals(this.ConflictShipField, value) != true)) {
                    this.ConflictShipField = value;
                    this.RaisePropertyChanged("ConflictShip");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EndGameResponse", Namespace="http://schemas.datacontract.org/2004/07/Common.Respose")]
    [System.SerializableAttribute()]
    public partial class EndGameResponse : SeaBattle.GameService.BaseResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SeaBattle.GameService.DTOUser WinnerField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SeaBattle.GameService.DTOUser Winner {
            get {
                return this.WinnerField;
            }
            set {
                if ((object.ReferenceEquals(this.WinnerField, value) != true)) {
                    this.WinnerField = value;
                    this.RaisePropertyChanged("Winner");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AbortGameResponse", Namespace="http://schemas.datacontract.org/2004/07/Common.Respose")]
    [System.SerializableAttribute()]
    public partial class AbortGameResponse : SeaBattle.GameService.BaseResponse {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StartChatResponse", Namespace="http://schemas.datacontract.org/2004/07/Common.Respose")]
    [System.SerializableAttribute()]
    public partial class StartChatResponse : SeaBattle.GameService.BaseResponse {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecieveMessageResponse", Namespace="http://schemas.datacontract.org/2004/07/Common.Respose")]
    [System.SerializableAttribute()]
    public partial class RecieveMessageResponse : SeaBattle.GameService.BaseResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetTopPlayersResponse", Namespace="http://schemas.datacontract.org/2004/07/Common.Respose")]
    [System.SerializableAttribute()]
    public partial class GetTopPlayersResponse : SeaBattle.GameService.BaseResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SeaBattle.GameService.DTOFullUserInfo[] TopPlayersField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SeaBattle.GameService.DTOFullUserInfo[] TopPlayers {
            get {
                return this.TopPlayersField;
            }
            set {
                if ((object.ReferenceEquals(this.TopPlayersField, value) != true)) {
                    this.TopPlayersField = value;
                    this.RaisePropertyChanged("TopPlayers");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetLastGamesResponse", Namespace="http://schemas.datacontract.org/2004/07/Common.Respose")]
    [System.SerializableAttribute()]
    public partial class GetLastGamesResponse : SeaBattle.GameService.BaseResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SeaBattle.GameService.DTOFullGameInfo[] GamesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SeaBattle.GameService.DTOFullGameInfo[] Games {
            get {
                return this.GamesField;
            }
            set {
                if ((object.ReferenceEquals(this.GamesField, value) != true)) {
                    this.GamesField = value;
                    this.RaisePropertyChanged("Games");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateGameResponse", Namespace="http://schemas.datacontract.org/2004/07/Common.Respose")]
    [System.SerializableAttribute()]
    public partial class CreateGameResponse : SeaBattle.GameService.BaseResponse {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthorizeResponse", Namespace="http://schemas.datacontract.org/2004/07/Common.Respose")]
    [System.SerializableAttribute()]
    public partial class AuthorizeResponse : SeaBattle.GameService.BaseResponse {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Shot", Namespace="http://schemas.datacontract.org/2004/07/Entity.GameEntities")]
    [System.SerializableAttribute()]
    public partial class Shot : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SeaBattle.GameService.ShotStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SeaBattle.GameService.XYCoordinate XyCoordinateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SeaBattle.GameService.ShotStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SeaBattle.GameService.XYCoordinate XyCoordinate {
            get {
                return this.XyCoordinateField;
            }
            set {
                if ((object.ReferenceEquals(this.XyCoordinateField, value) != true)) {
                    this.XyCoordinateField = value;
                    this.RaisePropertyChanged("XyCoordinate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOUser", Namespace="http://schemas.datacontract.org/2004/07/Common.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CurrentGameIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GamesWonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CurrentGameId {
            get {
                return this.CurrentGameIdField;
            }
            set {
                if ((this.CurrentGameIdField.Equals(value) != true)) {
                    this.CurrentGameIdField = value;
                    this.RaisePropertyChanged("CurrentGameId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Games {
            get {
                return this.GamesField;
            }
            set {
                if ((this.GamesField.Equals(value) != true)) {
                    this.GamesField = value;
                    this.RaisePropertyChanged("Games");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GamesWon {
            get {
                return this.GamesWonField;
            }
            set {
                if ((this.GamesWonField.Equals(value) != true)) {
                    this.GamesWonField = value;
                    this.RaisePropertyChanged("GamesWon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShotStatus", Namespace="http://schemas.datacontract.org/2004/07/Entity.Enums")]
    public enum ShotStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Missed = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hit = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Killed = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOAwaitingGame", Namespace="http://schemas.datacontract.org/2004/07/Common.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOAwaitingGame : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SeaBattle.GameService.DTOUser CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GameIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationTime {
            get {
                return this.CreationTimeField;
            }
            set {
                if ((this.CreationTimeField.Equals(value) != true)) {
                    this.CreationTimeField = value;
                    this.RaisePropertyChanged("CreationTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SeaBattle.GameService.DTOUser Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid GameId {
            get {
                return this.GameIdField;
            }
            set {
                if ((this.GameIdField.Equals(value) != true)) {
                    this.GameIdField = value;
                    this.RaisePropertyChanged("GameId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOFullUserInfo", Namespace="http://schemas.datacontract.org/2004/07/Common.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOFullUserInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DataRegisterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PercentWonGamesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DataRegister {
            get {
                return this.DataRegisterField;
            }
            set {
                if ((this.DataRegisterField.Equals(value) != true)) {
                    this.DataRegisterField = value;
                    this.RaisePropertyChanged("DataRegister");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Games {
            get {
                return this.GamesField;
            }
            set {
                if ((this.GamesField.Equals(value) != true)) {
                    this.GamesField = value;
                    this.RaisePropertyChanged("Games");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PercentWonGames {
            get {
                return this.PercentWonGamesField;
            }
            set {
                if ((this.PercentWonGamesField.Equals(value) != true)) {
                    this.PercentWonGamesField = value;
                    this.RaisePropertyChanged("PercentWonGames");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOFullGameInfo", Namespace="http://schemas.datacontract.org/2004/07/Common.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOFullGameInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LongTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NamePlayer1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NamePlayer2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartGameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WinnerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LongTime {
            get {
                return this.LongTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.LongTimeField, value) != true)) {
                    this.LongTimeField = value;
                    this.RaisePropertyChanged("LongTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NamePlayer1 {
            get {
                return this.NamePlayer1Field;
            }
            set {
                if ((object.ReferenceEquals(this.NamePlayer1Field, value) != true)) {
                    this.NamePlayer1Field = value;
                    this.RaisePropertyChanged("NamePlayer1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NamePlayer2 {
            get {
                return this.NamePlayer2Field;
            }
            set {
                if ((object.ReferenceEquals(this.NamePlayer2Field, value) != true)) {
                    this.NamePlayer2Field = value;
                    this.RaisePropertyChanged("NamePlayer2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartGame {
            get {
                return this.StartGameField;
            }
            set {
                if ((this.StartGameField.Equals(value) != true)) {
                    this.StartGameField = value;
                    this.RaisePropertyChanged("StartGame");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Winner {
            get {
                return this.WinnerField;
            }
            set {
                if ((object.ReferenceEquals(this.WinnerField, value) != true)) {
                    this.WinnerField = value;
                    this.RaisePropertyChanged("Winner");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GameService.IService", CallbackContract=typeof(SeaBattle.GameService.IServiceCallback))]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Authorize", ReplyAction="http://tempuri.org/IService/AuthorizeResponse")]
        SeaBattle.GameService.AuthorizeResponse Authorize(SeaBattle.GameService.AuthorizeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Authorize", ReplyAction="http://tempuri.org/IService/AuthorizeResponse")]
        System.Threading.Tasks.Task<SeaBattle.GameService.AuthorizeResponse> AuthorizeAsync(SeaBattle.GameService.AuthorizeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Register", ReplyAction="http://tempuri.org/IService/RegisterResponse")]
        SeaBattle.GameService.RegisterResponse Register(SeaBattle.GameService.RegisterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Register", ReplyAction="http://tempuri.org/IService/RegisterResponse")]
        System.Threading.Tasks.Task<SeaBattle.GameService.RegisterResponse> RegisterAsync(SeaBattle.GameService.RegisterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/CreateGame")]
        void CreateGame(SeaBattle.GameService.CreateGameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/CreateGame")]
        System.Threading.Tasks.Task CreateGameAsync(SeaBattle.GameService.CreateGameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/DoShot")]
        void DoShot(SeaBattle.GameService.Shot shot);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/DoShot")]
        System.Threading.Tasks.Task DoShotAsync(SeaBattle.GameService.Shot shot);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/ConnectToGame")]
        void ConnectToGame(SeaBattle.GameService.ConnectToGameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/ConnectToGame")]
        System.Threading.Tasks.Task ConnectToGameAsync(SeaBattle.GameService.ConnectToGameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/SendReady")]
        void SendReady(SeaBattle.GameService.SendReadyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/SendReady")]
        System.Threading.Tasks.Task SendReadyAsync(SeaBattle.GameService.SendReadyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/GetTopPlayers")]
        void GetTopPlayers();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/GetTopPlayers")]
        System.Threading.Tasks.Task GetTopPlayersAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/GetStatisticLastGames")]
        void GetStatisticLastGames();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/GetStatisticLastGames")]
        System.Threading.Tasks.Task GetStatisticLastGamesAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/SendMessage")]
        void SendMessage(SeaBattle.GameService.SendMessageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/SendMessage")]
        System.Threading.Tasks.Task SendMessageAsync(SeaBattle.GameService.SendMessageRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/AuthorizeCallback")]
        void AuthorizeCallback(SeaBattle.GameService.AuthorizeResponse response);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/RegisterCallback")]
        void RegisterCallback(SeaBattle.GameService.RegisterResponse response);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/DoShotCallback")]
        void DoShotCallback(SeaBattle.GameService.ShotResponse response);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/GetListAvailableGames")]
        void GetListAvailableGames(SeaBattle.GameService.GetListGamesResponse response);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/GiveConnectedOpponentInfo")]
        void GiveConnectedOpponentInfo(SeaBattle.GameService.CurentGameResponse response);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/ConnectToGameCallback")]
        void ConnectToGameCallback(SeaBattle.GameService.CurentGameResponse response);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/SendReadyCallback")]
        void SendReadyCallback(SeaBattle.GameService.SendReadyResponse response);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/StartGame")]
        void StartGame();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/EndGame")]
        void EndGame(SeaBattle.GameService.EndGameResponse response);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/AbortGame")]
        void AbortGame(SeaBattle.GameService.AbortGameResponse response);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/StartChat")]
        void StartChat(SeaBattle.GameService.StartChatResponse response);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/RecieveMessage")]
        void RecieveMessage(SeaBattle.GameService.RecieveMessageResponse response);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/GetTopPlayersCallback")]
        void GetTopPlayersCallback(SeaBattle.GameService.GetTopPlayersResponse response);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/GetStatisticLastGamesCallBack")]
        void GetStatisticLastGamesCallBack(SeaBattle.GameService.GetLastGamesResponse response);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/CreateGameCallBack")]
        void CreateGameCallBack(SeaBattle.GameService.CreateGameResponse response);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/SendOpponentIsReady")]
        void SendOpponentIsReady();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : SeaBattle.GameService.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.DuplexClientBase<SeaBattle.GameService.IService>, SeaBattle.GameService.IService {
        
        public ServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public SeaBattle.GameService.AuthorizeResponse Authorize(SeaBattle.GameService.AuthorizeRequest request) {
            return base.Channel.Authorize(request);
        }
        
        public System.Threading.Tasks.Task<SeaBattle.GameService.AuthorizeResponse> AuthorizeAsync(SeaBattle.GameService.AuthorizeRequest request) {
            return base.Channel.AuthorizeAsync(request);
        }
        
        public SeaBattle.GameService.RegisterResponse Register(SeaBattle.GameService.RegisterRequest request) {
            return base.Channel.Register(request);
        }
        
        public System.Threading.Tasks.Task<SeaBattle.GameService.RegisterResponse> RegisterAsync(SeaBattle.GameService.RegisterRequest request) {
            return base.Channel.RegisterAsync(request);
        }
        
        public void CreateGame(SeaBattle.GameService.CreateGameRequest request) {
            base.Channel.CreateGame(request);
        }
        
        public System.Threading.Tasks.Task CreateGameAsync(SeaBattle.GameService.CreateGameRequest request) {
            return base.Channel.CreateGameAsync(request);
        }
        
        public void DoShot(SeaBattle.GameService.Shot shot) {
            base.Channel.DoShot(shot);
        }
        
        public System.Threading.Tasks.Task DoShotAsync(SeaBattle.GameService.Shot shot) {
            return base.Channel.DoShotAsync(shot);
        }
        
        public void ConnectToGame(SeaBattle.GameService.ConnectToGameRequest request) {
            base.Channel.ConnectToGame(request);
        }
        
        public System.Threading.Tasks.Task ConnectToGameAsync(SeaBattle.GameService.ConnectToGameRequest request) {
            return base.Channel.ConnectToGameAsync(request);
        }
        
        public void SendReady(SeaBattle.GameService.SendReadyRequest request) {
            base.Channel.SendReady(request);
        }
        
        public System.Threading.Tasks.Task SendReadyAsync(SeaBattle.GameService.SendReadyRequest request) {
            return base.Channel.SendReadyAsync(request);
        }
        
        public void GetTopPlayers() {
            base.Channel.GetTopPlayers();
        }
        
        public System.Threading.Tasks.Task GetTopPlayersAsync() {
            return base.Channel.GetTopPlayersAsync();
        }
        
        public void GetStatisticLastGames() {
            base.Channel.GetStatisticLastGames();
        }
        
        public System.Threading.Tasks.Task GetStatisticLastGamesAsync() {
            return base.Channel.GetStatisticLastGamesAsync();
        }
        
        public void SendMessage(SeaBattle.GameService.SendMessageRequest request) {
            base.Channel.SendMessage(request);
        }
        
        public System.Threading.Tasks.Task SendMessageAsync(SeaBattle.GameService.SendMessageRequest request) {
            return base.Channel.SendMessageAsync(request);
        }
    }
}
